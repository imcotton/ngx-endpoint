version: 2.1





executors:
  base:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10-stretch





jobs:

  install:
    executor: base

    steps:
      - checkout

      # alter pkg only, w/o downloading
      - run: npm i -D --package-lock-only --no-package-lock sonarqube-scanner

      - restore_cache: &common_cache_key
          key: v2.2-dep-{{ checksum "package.json" }}

      - run: npm install

      - persist_to_workspace:
          root: .
          paths:
            - ./*

      - save_cache:
          <<: *common_cache_key
          paths:
            - node_modules/



  lint_and_spec:
    executor: base

    steps:
      - attach_workspace: &common_attach
          at: .

      - run: npm test -- --ci --coverage
      - run: mkdir -p reports/{jest,tslint}
      - run: cp junit.xml reports/jest/result.xml

      - store_test_results:
          path: reports

      - persist_to_workspace:
          root: .
          paths:
            - ./coverage/lcov.info
            - ./junit.xml



  raw_build:
    executor: base

    steps:
      - attach_workspace: *common_attach

      - run: npm run build



  sonar_scanner:
    executor: base

    steps:
      - attach_workspace: *common_attach

      - run:
          command: >-
            $(npm bin)/sonar-scanner
            -Dsonar.login=${SONARCLOUD_TOKEN}
            -Dsonar.projectVersion=$(npm run -s version)
            -Dsonar.branch.name=${CIRCLE_BRANCH}



  npm_publish:
    executor: base

    environment:
      NPM_DIST_TAG: next

    steps:
      - checkout

      - run: npm install
      - run: sh ./dev/publish.sh
      - run: npm shrinkwrap

      - run: mkdir artifacts
      - run: mv npm-shrinkwrap.json artifacts/
      - run: mv ngx-endpoint-*.tgz artifacts/

      - store_artifacts:
          path: artifacts



  npm_tag_latest:
    executor: base

    steps:
      - checkout

      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
      - run: npm dist-tag add ngx-endpoint@$(npm run -s version) latest





workflows:
  version: 2

  build:

    jobs:

      - install: &common_all_tags
          filters:
            tags:
              only: /.*/

      - raw_build:
          <<: *common_all_tags
          requires:
            - install

      - lint_and_spec:
          <<: *common_all_tags
          requires:
            - install

      - sonar_scanner:
          <<: *common_all_tags
          requires:
            - lint_and_spec

      - npm_publish:
          filters: &common_only_tags_v
            tags:
              only: /^v\/.+/
            branches:
              ignore: /.*/
          requires:
            - raw_build
            - lint_and_spec

      - hold:
          type: approval
          filters: *common_only_tags_v
          requires:
            - npm_publish

      - npm_tag_latest:
          filters: *common_only_tags_v
          requires:
            - hold

